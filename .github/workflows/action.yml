name: Docker Build Multi Arch Images
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: jcolemorrison/go-example-api
      DOCKER_REPO_TAG: latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.5

      - run: go version

      - name: Install tooling for cross compile
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends gcc-aarch64-linux-gnu libc6-dev-arm64-cross && sudo rm -rf /var/lib/apt/lists/*

      - name: Build application AMD64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o ./bin/amd64/api
      
      - name: Build application ARM64
        run: CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o ./bin/arm64/api

      - name: Login to Docker
        run: echo '${{ secrets.DOCKERHUB_PASSWORD }}' | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Docker Buildx and Push
        run: |
          docker buildx create --use --name multi_arch
          docker buildx build --platform linux/amd64,linux/arm64 \
            -f ./ReleaseDockerfile \
            -t ${DOCKER_REPO}:${DOCKER_REPO_TAG} \
            --push \
            .